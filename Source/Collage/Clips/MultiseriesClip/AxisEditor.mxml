<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
	xmlns:ep="com.endlesspaths.components.*"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	clipAndEnableScrolling="true" >
	<fx:Script><![CDATA[
		[Bindable]public var viewObject:Object;
	]]></fx:Script>
	<ep:ImageButton text="AxisEditor" image="@Embed('/Assets/toolbar/multiseriesparts.png')" click="axisEditorPopup.popUpOpen = !axisEditorPopup.popUpOpen;" />
	<ep:AutoPopUpAnchor id="axisEditorPopup" displayPopUp="false" popUpPosition="below" enabled="true" top="48">
		<ep:CalloutPanel id="axisEditorPanel" arrowPosition="top" title="Chart Axis Editor">
			<s:List id="vAxisList"
					requireSelection="false"
					width="300"
					height="250"
					contentBackgroundColor="#dee4ea"
					borderVisible="false"
					dataProvider="{viewObject.vAxis}"
					dragEnabled="true"
					dragMoveEnabled="true"
					dropEnabled="true"
					creationComplete="Reset()">
				<fx:Script><![CDATA[
					import Collage.Utilities.Logger.*;
					import Collage.Clips.MultiseriesClip.Components.LineSeries.*;
					import Collage.Clips.MultiseriesClip.Components.ColumnSeries.*;
					import Collage.Clips.MultiseriesClip.Components.PlotSeries.*;
					import Collage.Clips.MultiseriesClip.Components.VAxis.*;
					import flash.events.Event;
					import mx.collections.ArrayList;

					public function Reset():void {

					}

					public function AddVAxis():void
					{
						var newVAxis:VAxisPart = new VAxisPart();
						viewObject.vAxis.addItem(newVAxis);
					}
				]]></fx:Script>
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer focusRect="false" width="100%" height="35">
							<s:states>
								<s:State name="normal"/>
								<s:State name="hovered"/>
								<s:State name="editing"/>
								<s:State name="selected"/>
							</s:states>
							<fx:Script><![CDATA[
								import Collage.Utilities.Logger.*;
								import Collage.DataEngine.*;
								import Collage.Clip.*;
								import flashx.textLayout.formats.*;
								import Collage.Clips.MultiseriesClip.Components.VAxis.*;

								override public function set data(value:Object):void {
									super.data = value;
									if (data == null) // a renderer's data is set to null when it goes out of view
										return;
									var axisPart:VAxisPart = data as VAxisPart;
									//parts.text = "numeric"//linePart.query.dataset + " - XAxis:" + linePart.xAxis + ", YAxis:" + linePart.yAxis;
								}
								public function DeleteItem():void {
									outerDocument.vAxisList.dataProvider.removeItemAt(itemIndex);
								}
							]]></fx:Script>
							<s:Rect width="100%" top="0" bottom="0" includeIn="selected">
								<s:fill>
									<s:LinearGradient rotation="90">
										<s:GradientEntry alpha="1.0" color="#b0bed7" ratio="0"/>
										<s:GradientEntry alpha="1.0" color="#8295b7" ratio="1"/>
									</s:LinearGradient>
								</s:fill>
							</s:Rect>
							<s:Line width="100%" top="0" includeIn="selected">
								<s:stroke>
									<s:SolidColorStroke caps="none" color="#a2b0cb" weight="1"/>
								</s:stroke>
							</s:Line>
							<mx:Image right="5" verticalCenter="0" click="DeleteItem()" source="@Embed('/Assets/icons/delete.png')" />
							<s:HGroup left="5" right="32" top="5" verticalAlign="middle" >
								<s:Label text="Vertical Axis" id="typeText" color="0x222222" color.selected="0xffffff" maxDisplayedLines="1" fontWeight="bold" fontSize="12" >
									<s:filters>
										<s:DropShadowFilter distance="1" color="#555555" blurX="1" blurY="1" includeIn="selected"/>
									</s:filters>
								</s:Label>
							</s:HGroup>
							<s:HGroup left="5" right="32" width="100%" bottom="5" verticalAlign="middle" >
								<s:Label id="type" text="numeric" color="0x444444" color.selected="0xdddddd" maxDisplayedLines="1" fontSize="10" >
									<s:filters>
										<s:DropShadowFilter distance="1" color="#555555" blurX="1" blurY="1" includeIn="selected"/>
									</s:filters>
								</s:Label>
							</s:HGroup>
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
			<s:HGroup>
				<s:Button click="AddVAxis()" label="Add Axis" />
			</s:HGroup>
		</ep:CalloutPanel>
	</ep:AutoPopUpAnchor>
</s:Group>
